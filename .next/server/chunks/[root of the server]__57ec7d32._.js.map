{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///home/razvan/Documents/IP/proiect-ip/src/lib/users.ts"],"sourcesContent":["import { promises as fs } from 'fs';\nimport path from 'path';\nimport bcrypt from 'bcryptjs';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst usersPath = path.join(process.cwd(), 'src/lib/users.json');\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  password: string;\n}\n\nexport async function createUser(userData: Omit<User, 'id'>) {\n  const users = await getUsers();\n  const existingUser = users.find(user => user.email === userData.email);\n  \n  if (existingUser) {\n    throw new Error('User already exists');\n  }\n\n  const hashedPassword = await bcrypt.hash(userData.password, 10);\n  const newUser: User = {\n    id: uuidv4(),\n    ...userData,\n    password: hashedPassword,\n  };\n\n  users.push(newUser);\n  await fs.writeFile(usersPath, JSON.stringify(users, null, 2));\n  return newUser;\n}\n\nexport async function verifyUser(email: string, password: string) {\n  const users = await getUsers();\n  const user = users.find(user => user.email === email);\n\n  if (!user) {\n    throw new Error('User not found');\n  }\n\n  const isValid = await bcrypt.compare(password, user.password);\n  if (!isValid) {\n    throw new Error('Invalid password');\n  }\n\n  return user;\n}\n\nasync function getUsers(): Promise<User[]> {\n  try {\n    const data = await fs.readFile(usersPath, 'utf-8');\n    return JSON.parse(data);\n  } catch (error) {\n    return [];\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AASpC,eAAe,WAAW,QAA0B;IACzD,MAAM,QAAQ,MAAM;IACpB,MAAM,eAAe,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK,SAAS,KAAK;IAErE,IAAI,cAAc;QAChB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,SAAS,QAAQ,EAAE;IAC5D,MAAM,UAAgB;QACpB,IAAI,CAAA,GAAA,4KAAA,CAAA,KAAM,AAAD;QACT,GAAG,QAAQ;QACX,UAAU;IACZ;IAEA,MAAM,IAAI,CAAC;IACX,MAAM,6FAAA,CAAA,WAAE,CAAC,SAAS,CAAC,WAAW,KAAK,SAAS,CAAC,OAAO,MAAM;IAC1D,OAAO;AACT;AAEO,eAAe,WAAW,KAAa,EAAE,QAAgB;IAC9D,MAAM,QAAQ,MAAM;IACpB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAA,OAAQ,KAAK,KAAK,KAAK;IAE/C,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,UAAU,MAAM,mIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;IAC5D,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,eAAe;IACb,IAAI;QACF,MAAM,OAAO,MAAM,6FAAA,CAAA,WAAE,CAAC,QAAQ,CAAC,WAAW;QAC1C,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,OAAO;QACd,OAAO,EAAE;IACX;AACF","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///home/razvan/Documents/IP/proiect-ip/src/app/api/signup/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { createUser } from '@/lib/users';\n\nexport async function POST(request: Request) {\n  try {\n    const { name, email, password } = await request.json();\n    const newUser = await createUser({ name, email, password });\n    return NextResponse.json({ success: true, user: newUser });\n  } catch (error: any) {\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 400 }\n    );\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;QACpD,MAAM,UAAU,MAAM,CAAA,GAAA,qHAAA,CAAA,aAAU,AAAD,EAAE;YAAE;YAAM;YAAO;QAAS;QACzD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,MAAM;QAAQ;IAC1D,EAAE,OAAO,OAAY;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}